# =================================
# 🔨 requirements_build.txt
# =================================
# Universal DOE Platform - Build Dependencies
# Version: 2.0.0
# Python: 3.8-3.12
# Last Updated: 2024-12
#
# 용도: 데스크톱 애플리케이션 빌드 및 패키징
# 
# 설치 방법:
#   pip install -r requirements_build.txt
#
# 주의사항:
#   - 런타임 패키지는 requirements.txt 참조
#   - 플랫폼별 도구는 해당 OS에서만 설치
#   - 빌드 전 가상환경 사용 강력 권장
#
# =================================

# ==========================================
# 🏗️ Core Build Tools
# ==========================================
# PyInstaller - 크로스 플랫폼 실행파일 생성
pyinstaller==6.11.1                # Python 3.12 지원, 안정성 향상
pyinstaller-hooks-contrib==2024.10 # 추가 라이브러리 훅

# GUI 빌드 도우미
auto-py-to-exe==2.45.1             # PyInstaller GUI 인터페이스

# ==========================================
# 📦 Packaging & Distribution
# ==========================================
# Python 패키징 기본
wheel==0.44.0                      # 휠 패키지 생성
setuptools==75.5.0                 # 패키지 설정 관리
setuptools-scm==8.1.0              # Git 기반 버전 관리
build==1.2.2.post1                 # PEP 517 빌드 프론트엔드

# 배포 도구
twine==5.1.1                       # PyPI 업로드
pip-tools==7.4.1                   # requirements 관리

# ==========================================
# 🎨 Resource Management
# ==========================================
# 아이콘 및 리소스 처리
pillow==11.0.0                     # 이미지 처리 (아이콘 변환)
pycairo==1.27.0                    # SVG → 비트맵 변환

# ==========================================
# 🔒 Code Signing & Security
# ==========================================
# 크로스 플랫폼 서명
pycodesign==0.1.0                  # Python 기반 코드 서명
sigstore==3.5.1                    # Sigstore 서명 (오픈소스)

# ==========================================
# 🚀 Build Optimization
# ==========================================
# 크기 최적화
pyminifier==2.1                    # Python 코드 압축 (사용 주의)
python-minifier==2.11.3            # 안전한 코드 최소화

# 성능 분석
py-spy==0.3.14                     # 런타임 프로파일링
memory-profiler==0.61.0            # 메모리 사용 분석

# ==========================================
# 📊 Build Analysis
# ==========================================
# 번들 분석
pyinstaller-versionfile==2.1.1     # Windows 버전 정보
pefile==2024.8.26                  # PE 파일 분석 (Windows)

# ==========================================
# 🪟 Windows Specific Tools
# ==========================================
# Windows 빌드 도구 (Windows에서만 설치)
# pywin32==308                     # Windows API 접근
# py2exe==0.13.0.2                 # 대체 exe 빌더
# windows-curses==2.4.0            # 콘솔 UI 지원
# pynsist==2.8                     # NSIS 기반 인스톨러

# Windows 인스톨러
# innosetup==6.2.2                 # Inno Setup 래퍼 (별도 설치 필요)
# wix==3.11.2                      # WiX 툴셋 래퍼 (별도 설치 필요)

# ==========================================
# 🍎 macOS Specific Tools
# ==========================================
# macOS 빌드 도구 (macOS에서만 설치)
# py2app==0.28.8                   # macOS 앱 번들 생성
# dmgbuild==1.6.1                  # DMG 디스크 이미지 생성
# mac-alias==2.2.2                 # macOS 별칭 생성
# biplist==1.0.3                   # plist 파일 처리
# ds-store==1.3.1                  # .DS_Store 파일 조작

# macOS 코드 서명
# macholib==1.16.3                 # Mach-O 바이너리 처리
# altgraph==0.17.4                 # 의존성 그래프 분석

# ==========================================
# 🐧 Linux Specific Tools
# ==========================================
# Linux 빌드 도구 (Linux에서만 설치)
# pyqtdeploy==3.3.0                # Qt 기반 배포
# python-appimage==1.2.5           # AppImage 생성 도우미
# snapcraft==8.4.3                 # Snap 패키지 생성
# python-debian==0.1.49            # DEB 패키지 처리

# Linux 패키징
# stdeb==0.10.0                    # deb 패키지 생성
# pyp2rpm==3.3.10                  # RPM 패키지 생성

# ==========================================
# 🔄 CI/CD Integration
# ==========================================
# 버전 관리
bump2version==1.0.1                # 버전 번호 자동 증가
python-semantic-release==9.14.0    # 시맨틱 버저닝
commitizen==3.30.0                 # 커밋 메시지 표준화

# 빌드 자동화
invoke==2.2.0                      # 태스크 실행 도구
doit==0.36.0                       # 빌드 자동화 시스템

# ==========================================
# 📚 Documentation Generation
# ==========================================
# 빌드 문서화
sphinx==8.1.3                      # API 문서 생성
sphinx-rtd-theme==3.0.2            # Read the Docs 테마
myst-parser==4.0.0                 # Markdown 지원

# 변경 로그
towncrier==24.8.0                  # 뉴스 프래그먼트 기반 체인지로그

# ==========================================
# 🧪 Build Testing
# ==========================================
# 빌드 검증
pytest==8.3.3                      # 테스트 프레임워크
pytest-cov==6.0.0                  # 코드 커버리지
tox==4.23.2                        # 다중 환경 테스트

# ==========================================
# 🛠️ Utility Tools
# ==========================================
# 일반 유틸리티
click==8.1.7                       # CLI 도구 생성
colorama==0.4.6                    # 크로스 플랫폼 컬러 출력
tqdm==4.67.1                       # 진행률 표시
rich==13.9.4                       # 리치 터미널 출력

# 파일 처리
pathlib2==2.3.7.post1              # 경로 처리 호환성
filelock==3.16.1                   # 파일 잠금

# ==========================================
# 🎯 Advanced Build Tools (선택적)
# ==========================================
# 고급 컴파일러
# nuitka==2.5.1                    # Python to C++ 컴파일러
# cython==3.0.11                   # Python to C 변환

# 가상화/컨테이너
# briefcase==0.3.19                # 다중 플랫폼 패키징
# constructor==3.9.2               # Anaconda 인스톨러 생성

# ==========================================
# 📋 Build Configuration Files
# ==========================================
# 다음 설정 파일들과 함께 사용:
# - .spec 파일 (PyInstaller)
# - setup.py / setup.cfg / pyproject.toml
# - build_config.py (커스텀 빌드 스크립트)
# - installer_config.iss (Inno Setup)

# ==========================================
# ⚡ Build Optimization Tips
# ==========================================
# 1. 크기 최적화:
#    - UPX 압축 사용 (--upx-dir)
#    - 불필요한 모듈 제외 (--exclude-module)
#    - Tree shaking 적용
#
# 2. 속도 최적화:
#    - --onedir 대신 --onefile 피하기
#    - 런타임 임포트 최소화
#    - 코드 사전 컴파일
#
# 3. 호환성:
#    - Python 3.8-3.12 테스트
#    - ARM64 지원 확인
#    - 서명된 바이너리 사용

# ==========================================
# 🔍 Troubleshooting
# ==========================================
# 일반적인 문제 해결:
#
# 1. "Module not found" 에러:
#    - hiddenimports 추가
#    - hooks 파일 작성
#
# 2. 바이러스 오탐:
#    - 코드 서명 적용
#    - 평판 좋은 서명 인증서 사용
#
# 3. 크기 문제:
#    - 가상 환경에서 깨끗한 빌드
#    - 선택적 의존성 제거
#
# 4. 시작 속도:
#    - --onedir 옵션 사용
#    - 지연 임포트 적용

# ==========================================
# 📝 Version History
# ==========================================
# 2024-12: 초기 버전
# - PyInstaller 6.11.1 (Python 3.12 지원)
# - 크로스 플랫폼 빌드 도구 통합
# - CI/CD 파이프라인 지원
# =================================
