# =============================================================================
# 🧬 Universal DOE Platform - Environment Variables Template
# =============================================================================
# Version: 2.0.0
# Last Updated: 2024-12
#
# 이 파일을 복사하여 .env 파일을 생성하고 실제 값을 입력하세요.
# 명령어: cp .env.example .env
#
# ⚠️  주의: .env 파일은 절대 Git에 커밋하지 마세요!
# =============================================================================

# -----------------------------------------------------------------------------
# 🔧 Application Settings (애플리케이션 설정)
# -----------------------------------------------------------------------------
# 실행 환경: development, staging, production
APP_ENV=development

# 앱 이름 및 버전 (변경하지 마세요)
APP_NAME="Universal DOE Platform"
APP_VERSION="2.0.0"

# Streamlit 설정
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_HEADLESS=true
STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# 로그 레벨: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# 언어 설정: en, ko, zh, ja
DEFAULT_LANGUAGE=ko

# -----------------------------------------------------------------------------
# 🔒 Security Settings (보안 설정)
# -----------------------------------------------------------------------------
# JWT 비밀키 (32자 이상의 랜덤 문자열) - 필수
# 생성 방법: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your-secret-key-here-change-this-immediately

# 암호화 키 (32자) - 필수
ENCRYPTION_KEY=your-32-character-encryption-key

# 세션 타임아웃 (초 단위, 기본: 86400 = 24시간)
SESSION_TIMEOUT=86400

# CSRF 보호 활성화
ENABLE_CSRF_PROTECTION=true

# -----------------------------------------------------------------------------
# 💾 Database Settings (데이터베이스 설정)
# -----------------------------------------------------------------------------
# SQLite 데이터베이스 경로 (기본값 사용 권장)
DATABASE_PATH="./data/db/app.db"

# 백업 설정
BACKUP_ENABLED=true
BACKUP_INTERVAL=3600  # 1시간 (초 단위)
MAX_BACKUPS=5

# 데이터베이스 연결 풀
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10

# -----------------------------------------------------------------------------
# 🤖 AI API Keys (AI 엔진 설정)
# -----------------------------------------------------------------------------
# Google Gemini 2.0 Flash (필수) - 무료 티어 제공
# 발급: https://makersuite.google.com/app/apikey
# 무료: 60 requests/minute
GOOGLE_GEMINI_API_KEY=

# xAI Grok 3 Mini (선택) - 유료
# 발급: https://x.ai/api
# 특징: 실시간 정보, 긴 컨텍스트
XAI_GROK_API_KEY=
XAI_GROK_BASE_URL=https://api.x.ai/v1

# Groq (선택) - 무료 티어 제공 (추천)
# 발급: https://console.groq.com
# 무료: 100 requests/minute, 초고속 추론
GROQ_API_KEY=
GROQ_BASE_URL=https://api.groq.com/openai/v1

# DeepSeek (선택) - 코드/수식 특화
# 발급: https://platform.deepseek.com
# 특징: 코드 생성, 수학적 추론 강점
DEEPSEEK_API_KEY=
DEEPSEEK_BASE_URL=https://api.deepseek.com/v1

# SambaNova (선택) - 무료 클라우드
# 발급: https://cloud.sambanova.ai
# 무료: Llama 3.1 대규모 모델 사용 가능
SAMBANOVA_API_KEY=
SAMBANOVA_BASE_URL=https://api.sambanova.ai/v1

# HuggingFace (선택) - 무료
# 발급: https://huggingface.co/settings/tokens
# 특징: 도메인 특화 모델 (ChemBERTa, MatSciBERT)
HUGGINGFACE_TOKEN=

# -----------------------------------------------------------------------------
# 📊 Google Services (Google 서비스)
# -----------------------------------------------------------------------------
# Google Sheets URL (선택)
# 형식: https://docs.google.com/spreadsheets/d/SHEET_ID/edit
GOOGLE_SHEETS_URL=

# Google OAuth 2.0 (선택) - 사용자 로그인용
# 발급: Google Cloud Console → APIs & Services → Credentials
GOOGLE_OAUTH_CLIENT_ID=
GOOGLE_OAUTH_CLIENT_SECRET=

# Google 서비스 계정 키 파일 경로 (선택) - Sheets API용
# 상대 경로 또는 절대 경로
GOOGLE_SERVICE_ACCOUNT_KEY_PATH=

# -----------------------------------------------------------------------------
# 📚 Literature & Protocol APIs (문헌/프로토콜 검색)
# -----------------------------------------------------------------------------
# OpenAlex (무료) - 2억+ 학술 작품
# Polite 요청을 위한 이메일 (권장)
OPENALEX_EMAIL=your-email@example.com

# Crossref (무료) - DOI 메타데이터
# Polite 요청을 위한 이메일 (권장)
CROSSREF_EMAIL=your-email@example.com

# PubMed (무료) - 생의학 문헌
# Tool 이름 설정
PUBMED_TOOL=UniversalDOE

# arXiv (무료) - 프리프린트
# 요청 간 대기 시간 (초)
ARXIV_WAIT_TIME=3

# protocols.io (선택) - 실험 프로토콜
# 발급: https://www.protocols.io/developers
PROTOCOLS_IO_TOKEN=

# -----------------------------------------------------------------------------
# 🔬 Materials Databases (재료 데이터베이스)
# -----------------------------------------------------------------------------
# Materials Project (선택) - 재료 물성
# 발급: https://materialsproject.org/api
MATERIALS_PROJECT_API_KEY=

# Materials Commons (선택) - 재료 실험 데이터
# 발급: https://materialscommons.org/api
MATERIALS_COMMONS_API_KEY=

# -----------------------------------------------------------------------------
# 💾 Repository Services (데이터 저장소)
# -----------------------------------------------------------------------------
# GitHub (선택) - 코드 및 데이터
# 발급: https://github.com/settings/tokens
# 권한: repo (전체 접근)
GITHUB_TOKEN=

# Zenodo (선택) - 연구 데이터셋
# 발급: https://zenodo.org/account/settings/applications/tokens/new/
ZENODO_ACCESS_TOKEN=

# Figshare (선택) - 연구 데이터 공유
# 발급: https://figshare.com/account/applications
FIGSHARE_TOKEN=

# -----------------------------------------------------------------------------
# 💼 Cache Settings (캐시 설정)
# -----------------------------------------------------------------------------
# 캐시 디렉토리
CACHE_DIR=./data/cache

# 캐시 활성화
CACHE_ENABLED=true

# 캐시 최대 크기 (MB)
CACHE_MAX_SIZE_MB=500

# 캐시 TTL (초)
CACHE_TTL_SECONDS=1800  # 30분

# API 응답 캐시 (일)
API_CACHE_DAYS=7

# -----------------------------------------------------------------------------
# 🌐 Offline Mode (오프라인 모드)
# -----------------------------------------------------------------------------
# 오프라인 모드 기본값
OFFLINE_MODE_DEFAULT=false

# 연결 확인 주기 (초)
CONNECTION_CHECK_INTERVAL=30

# 자동 동기화
AUTO_SYNC_ENABLED=true
SYNC_INTERVAL=300  # 5분

# 오프라인 데이터 경로
OFFLINE_DATA_PATH=./data/offline

# -----------------------------------------------------------------------------
# ⚡ Performance Settings (성능 설정)
# -----------------------------------------------------------------------------
# 동시 요청 제한
MAX_CONCURRENT_REQUESTS=5

# API 요청 타임아웃 (초)
API_TIMEOUT=30

# 파일 업로드 최대 크기 (MB)
MAX_UPLOAD_SIZE_MB=500

# 배치 처리 크기
BATCH_SIZE=100

# 메모리 제한 (MB)
MAX_MEMORY_MB=4096

# -----------------------------------------------------------------------------
# 🛠️ Development Settings (개발 전용)
# -----------------------------------------------------------------------------
# 디버그 모드
DEBUG=false

# 프로파일링 활성화
ENABLE_PROFILING=false

# 목업 데이터 사용
USE_MOCK_DATA=false

# 테스트 계정 활성화
ENABLE_TEST_ACCOUNTS=false

# Hot reload
HOT_RELOAD=true

# -----------------------------------------------------------------------------
# 🎯 Feature Flags (기능 플래그)
# -----------------------------------------------------------------------------
# 새 UI 활성화
FEATURE_NEW_UI=true

# AI 채팅 기능
FEATURE_AI_CHAT=true

# 협업 기능
FEATURE_COLLABORATION=true

# 마켓플레이스
FEATURE_MARKETPLACE=true

# 고급 분석
FEATURE_ADVANCED_ANALYTICS=true

# 클라우드 동기화
FEATURE_CLOUD_SYNC=false

# 베타 기능
FEATURE_BETA=false

# 실험적 기능
FEATURE_EXPERIMENTAL=false

# -----------------------------------------------------------------------------
# 📊 Telemetry & Updates (원격 측정 및 업데이트)
# -----------------------------------------------------------------------------
# 사용 통계 수집 (익명)
ENABLE_TELEMETRY=false

# 자동 업데이트 확인
CHECK_FOR_UPDATES=true
UPDATE_CHECK_INTERVAL=86400  # 24시간

# 업데이트 채널: stable, beta, nightly
UPDATE_CHANNEL=stable

# 오류 보고
ENABLE_ERROR_REPORTING=false
ERROR_REPORTING_URL=

# -----------------------------------------------------------------------------
# 📧 Email Service (이메일 서비스) - 향후 구현
# -----------------------------------------------------------------------------
# SMTP 설정
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_USE_TLS=true

# 발신자 정보
EMAIL_FROM_NAME="Universal DOE Platform"
EMAIL_FROM_ADDRESS=noreply@universaldoe.com

# -----------------------------------------------------------------------------
# 🎨 Custom Settings (커스텀 설정)
# -----------------------------------------------------------------------------
# 조직별 커스터마이징
ORGANIZATION_NAME=
ORGANIZATION_LOGO_URL=
CUSTOM_THEME_COLOR=#1E88E5

# 추가 설정 공간
# CUSTOM_SETTING_1=
# CUSTOM_SETTING_2=
# CUSTOM_SETTING_3=

# =============================================================================
# 📝 Notes
# =============================================================================
# 1. 이 파일의 모든 값은 예시입니다. 실제 값으로 교체하세요.
# 2. 최소 필수 설정: JWT_SECRET_KEY, ENCRYPTION_KEY, GOOGLE_GEMINI_API_KEY
# 3. 무료 API 우선 사용을 권장합니다.
# 4. API 키 발급 시 각 서비스의 사용 약관을 확인하세요.
# 5. 문제 발생 시: https://github.com/your-org/universal-doe-platform/issues
# =============================================================================

# AI API Keys
GOOGLE_GEMINI_API_KEY=your-gemini-key
XAI_GROK_API_KEY=your-grok-key
# ... 기타 API 키들 ...

# === 여기에 OAuth 설정 추가 ===
# Google OAuth 2.0 (Google Cloud Console에서 발급)
GOOGLE_OAUTH_CLIENT_ID=123456789012-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_SECRET=GOCSPX-1234567890abcdefghijklmnop

# GitHub OAuth (GitHub Settings > Developer settings에서 발급)
GITHUB_CLIENT_ID=1234567890abcdef1234
GITHUB_CLIENT_SECRET=1234567890abcdef1234567890abcdef12345678
